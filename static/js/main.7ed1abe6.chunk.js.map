{"version":3,"sources":["app/home/DrumPadComponent.js","app/home/duck/types.js","app/home/duck/reducers.js","app/home/duck/actions.js","app/home/duck/operations.js","app/home/duck/index.js","app/home/DrumPadContainer.js","app/home/DrumMachineComponent.js","app/home/DrumMachineContainer.js","app/home/HomeComponent.js","app/home/HomeContainer.js","app/App.js","reducers.js","store.js","index.js"],"names":["DrumPadComponent","props","handleKeyDown","bind","document","addEventListener","this","removeEventListener","event","keyCode","play","updateDisplay","name","updatePadStyle","keyButton","Audio","audio","className","onClick","id","activePad","padStyle","src","React","Component","INITIAL_STATE","audioData","require","type","types","currentDisplay","dispatch","getState","Creators","setTimeout","homeReducer","state","action","Object","assign","DrumPadContainer","connect","home","homeOperations","DrumMachineComponent","map","e","index","key","url","icon","faDrum","DrumMachineContainer","HomeComponent","HomeContainer","App","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7ed1abe6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './drum-pad.scss';\r\n\r\nclass DrumPadComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n   \r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown(event) {\r\n        if (event.keyCode === this.props.keyCode) {\r\n            this.play();\r\n        }\r\n    }\r\n\r\n    play() {\r\n        this.props.updateDisplay(this.props.name);\r\n        this.props.updatePadStyle(this.props.keyButton);\r\n        const audio = new Audio(this.props.audio);\r\n        audio.play();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"drum-pad\" onClick={this.play.bind(this)} \r\n            id={(this.props.activePad === this.props.keyButton) ? this.props.padStyle : this.props.keyButton}>\r\n                <audio src={this.props.audio} className=\"clip\" />\r\n                {this.props.keyButton}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DrumPadComponent;","const UPDATE_DISPLAY = 'UPDATE_DISPLAY';\r\nconst UPDATE_PAD_STYLE = 'UPDATE_PAD_STYLE';\r\n\r\nexport default {\r\n    UPDATE_DISPLAY,\r\n    UPDATE_PAD_STYLE\r\n};","import types from './types.js';\r\n\r\n\r\nconst data = require('../audio.json');\r\nconst INITIAL_STATE = {\r\n    audioData: data\r\n};\r\n\r\nconst homeReducer = (state=INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case types.UPDATE_DISPLAY:\r\n            return Object.assign({}, state, {\r\n                currentDisplay: action.currentDisplay\r\n            });\r\n        case types.UPDATE_PAD_STYLE:\r\n            return Object.assign({}, state, {\r\n                padStyle: action.padStyle,\r\n                activePad: action.activePad\r\n            });\r\n        default:       \r\n            return state;\r\n    };\r\n};\r\n\r\nexport default homeReducer;","import types from './types.js';\r\n\r\nconst updateDisplay = (name) => {\r\n    return {\r\n        type: types.UPDATE_DISPLAY,\r\n        currentDisplay: name\r\n    };\r\n}\r\n\r\nconst updatePadStyle = (id, keyButton=id) => {\r\n    return {\r\n        type: types.UPDATE_PAD_STYLE,\r\n        padStyle: id,\r\n        activePad: keyButton\r\n    };\r\n}\r\n\r\nexport default { \r\n    updateDisplay,\r\n    updatePadStyle\r\n};","import Creators from './actions.js';\r\n\r\nconst updateDisplay = Creators.updateDisplay;\r\nconst updatePadStyle = (keyButton) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(Creators.updatePadStyle(keyButton + '-active', keyButton));\r\n        setTimeout(() => {\r\n            dispatch(Creators.updatePadStyle(keyButton));\r\n        }, 100)\r\n    }\r\n}\r\n\r\nexport default {\r\n    updateDisplay,\r\n    updatePadStyle\r\n};","import homeReducer from './reducers';\r\nexport { default as homeOperations} from './operations';\r\nexport { default as homeTypes } from './types';\r\nexport default homeReducer; ","import { connect } from 'react-redux';\r\nimport DrumPadComponent from './DrumPadComponent';\r\nimport { homeOperations } from './duck'; \r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        padStyle: state.home.padStyle,\r\n        activePad: state.home.activePad\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateDisplay: (name) => {\r\n            dispatch(homeOperations.updateDisplay(name));\r\n        },\r\n        updatePadStyle: (keyButton) => {\r\n            dispatch(homeOperations.updatePadStyle(keyButton));\r\n        }\r\n    };\r\n}\r\n\r\nconst DrumPadContainer = connect(mapStateToProps, mapDispatchToProps)(DrumPadComponent);\r\n\r\nexport default DrumPadContainer;","import React from 'react';\r\nimport DrumPad from './DrumPadContainer';\r\nimport './drum-machine.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faDrum } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst DrumMachineComponent = (props) => {\r\n    return (\r\n        <div id=\"drum-machine\">\r\n            <div id=\"drum-pads\">\r\n                {\r\n                    props.audioData.map((e, index) => {\r\n                        return (\r\n                            <DrumPad key={index} keyButton={e.keyButton} audio={e.url} keyCode={e.keyCode} \r\n                                name={e.name} /> \r\n                        );\r\n                    })\r\n                }\r\n                \r\n            </div>\r\n            <div id=\"display-box\">\r\n                <div id=\"logo\">\r\n                    <FontAwesomeIcon icon={faDrum} />\r\n                    Drum Machine\r\n                </div>\r\n                <div id=\"display\">\r\n                    <p id=\"audio-name\">{props.currentDisplay}</p>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DrumMachineComponent;","import { connect } from 'react-redux';\r\nimport DrumMachineComponent from './DrumMachineComponent';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        audioData: state.home.audioData,\r\n        currentDisplay: state.home.currentDisplay\r\n    };\r\n}\r\n\r\nconst DrumMachineContainer = connect(mapStateToProps, null)(DrumMachineComponent);\r\n\r\nexport default DrumMachineContainer;","import React from 'react';\r\nimport DrumMachine from './DrumMachineContainer';\r\n\r\nconst HomeComponent = () => {\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <DrumMachine />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeComponent;","import { connect } from 'react-redux';\r\nimport HomeComponent from './HomeComponent';\r\n\r\nconst HomeContainer = connect()(HomeComponent);\r\n\r\nexport default HomeContainer;","import React from 'react';\r\nimport { Home } from './home';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div> \r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport homeReducer from './app/home/duck';\r\n\r\nconst rootReducer = combineReducers({\r\n    home: homeReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n"],"sourceRoot":""}